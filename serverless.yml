service: cache-service
frameworkVersion: '3'
plugins:
  - serverless-offline
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerImage: mlupin/docker-lambda:python3.9-build
    dockerizePip: false
    layer: true
    slim: true
    strip: false
    zip: true
  serverless-offline:
    httpsProtocol: false
functions:
  app:
    environment:
      APP_DEBUG: ${env:APP_DEBUG}
      APP_NAME: ${env:APP_NAME}
      APP_STAGE: ${env:APP_STAGE}
      APP_TIMEZONE: ${env:APP_TIMEZONE}
      LOG_LEVEL: DEBUG
      POWERTOOLS_LOGGER_LOG_EVENT: true
      POWERTOOLS_METRICS_NAMESPACE: cache
      POWERTOOLS_SERVICE_NAME: cache-service
    events:
      - httpApi: '*'
    handler: app.main.handler
    layers:
      - Ref: PythonRequirementsLambdaLayer
package:
  patterns:
    - '!.git/**'
    - '!.gitignore'
    - '!.DS_Store'
    - '!npm-debug.log'
    - '!.serverless/**'
    - '!.serverless_plugins/**'
    - '!.venv/**'
  excludeDevDependencies: true
provider:
  name: aws
  region: eu-central-1
  runtime: python3.9
  stage: dev
  tracing:
    lambda: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Query
          Resource: ${env:AWS_ARN_DYNAMODB}
useDotenv: true
